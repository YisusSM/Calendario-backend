{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","components/ui/DeleteEvenFab.js","actions/ui.js","components/ui/AddNewFab.js","components/calendar/CalendarEvent.js","helpers/calendar-messages-espa√±ol.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","console","log","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","startLogout","dispatch","clear","logout","chekingFinish","login","user","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","formLoginValues","handleLoginInputChange","formRegisterValues","handleRegisterInputChange","rEmail","rPassword","rPasswordConfirmed","rName","lEmail","lPassword","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","DeleteEventFab","getState","uiOpenModal","AddNewFab","role","CalendarEvent","title","notes","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","length","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.584f2256.chunk.js","sourcesContent":["//objeto para centralizar todos los tipos de acciones\r\n \r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventAddNew: '[event] Add New',\r\n    eventLogout: '[event] Clean Events',\r\n    eventStartAddNew: '[event] Start Add New ',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdate: '[event] Event Updated',\r\n    eventDelete: '[event] Event Deleted',\r\n    eventLoaded: '[event] Event Loaded',\r\n\r\n\r\n    authChecking: '[auth] Checking Login State',\r\n    authCheckingFinish: '[auth] Finish Checking Login State',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Loign',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartJWTRenew: '[auth] Start Token Renew',\r\n    authLogout: '[auth] Logout', \r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid:null,\r\n    // name:null\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            \r\n            return {\r\n                \r\n                checking:false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: 'id que se obtiene de la bd',\r\n//     title: 'Entrevista',\r\n//     notes: 'arreglarse',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user: {\r\n//         _id: 'se agarra del state',\r\n//         name: 'se agarra del state',\r\n//     }\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            };\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id)? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events:[...action.payload]\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    console.log(token, 'token');\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\"\r\n\r\nexport const prepareEvents=(events = [])=>{\r\n    return events.map(\r\n        (e) =>({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n            \r\n        })\r\n    );\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\nimport { fetchConToken } from '../helpers/fetch';\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch,getState) => {\r\n        const { uid,name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            console.log(body);\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n        // dispatch(eventAddNew(event));\r\n    }\r\n}\r\n\r\n const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\nexport const eventUpdated = (event) =>{\r\n    return  async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdate(event));\r\n            }else {\r\n                console.log(body);\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n const eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const eventDeleted = () => {\r\n    return async (dispatch,getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n           \r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDelete());\r\n            }else{\r\n                Swal.fire('Error',body.msg,'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n const eventDelete = () => ({\r\n    type: types.eventDelete\r\n})\r\n\r\nexport const eventClean = () =>({\r\n    type: types.eventLogout\r\n})\r\n\r\nexport const eventStartLoadign = () => {\r\n    return async (dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const {eventos} = await resp.json();\r\n            \r\n            const events = prepareEvents(eventos);\r\n            \r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n} \r\n\r\nconst eventLoaded = (event) => ({\r\n    type:types.eventLoaded,\r\n    payload: event\r\n});","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from '../types/types'\r\nimport { eventClean } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/register', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n        console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const starthecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        console.log(body);\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n\r\n            dispatch(chekingFinish());\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventClean());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type:types.authLogout\r\n})\r\nconst chekingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport './login.css';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm();\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm();\r\n\r\n    const { rEmail, rPassword, rPasswordConfirmed, rName } = formRegisterValues;\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"?\");\r\n        if (rPassword !== rPasswordConfirmed) {\r\n            return Swal.fire('Error', 'Las contrase√±as deben ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword, rName));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                onChange={handleLoginInputChange}\r\n                                value={lEmail}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"lPassword\"\r\n                                onChange={handleLoginInputChange}\r\n                                value={lPassword}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contrase√±a\"\r\n                                name=\"rPassword\"\r\n                                value={rPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contrase√±a\"\r\n                                value={rPasswordConfirmed}\r\n                                name=\"rPasswordConfirmed\"\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\" navbar-brand \">{name}</span>\r\n\r\n            <button className=\" btn btn-outline-danger \"\r\n                onClick={handleLogout}>\r\n                <i className=\" fas fa-sign-out-alt \" />\r\n                <span > Salir</span>\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <button\r\n        className = \"btn btn-danger fab-danger\"\r\n        onClick = {()=>dispatch(eventDeleted())}>\r\n            <i className = \"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n\r\n})\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n  \r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"btn btn-primary fab\"\r\n                onClick = { () => dispatch(uiOpenModal()) }\r\n                value = \"ss\">\r\n                <i\r\n                    className=\"fas fa-plus \"\r\n                    role = \"button\"></i>\r\n            </button>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const { title,notes,user } = event;\r\n    \r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <p>{notes}</p>\r\n            <strong>- {user.name}</strong>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el d√≠a',\r\n    previous: '‚¨Ö',\r\n    next: '‚û°',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'D√≠a',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver m√°s (${total})`\r\n};","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventUpdated} from '../../actions/events';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\n\r\n\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\nexport const CalendarModal = () => {\r\n\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n\r\n            setFormValues(activeEvent);\r\n\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    // console.log(dateEnd)\r\n\r\n    const handleStartDateChange = (e) => {\r\n        if (activeEvent) {\r\n            activeEvent.start = e\r\n            setFormValues({\r\n                ...formValues,\r\n                start: activeEvent.start\r\n            })\r\n        } else {\r\n            setDateStart(e);\r\n            setFormValues({\r\n                ...formValues,\r\n                start: e\r\n            })\r\n        }\r\n    }\r\n    const handleEndDateChange = (e) => {\r\n        if (activeEvent) {\r\n            activeEvent.end = e\r\n            setFormValues({\r\n                ...formValues,\r\n                start: activeEvent.end\r\n            })\r\n        }\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    const closeModal = () => {\r\n        //TODO cerrar modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        var momentStart = moment(start);\r\n        var momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'Fecha de finalizaci√≥n no puede ser menor o igual a la de inicio...', 'error');\r\n\r\n        }\r\n\r\n        if (title.length < 2) {\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        //TODO realizar grabaci√≥n a bd\r\n        if (activeEvent) {\r\n            dispatch(eventUpdated(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    // console.log(titleValid, title);\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? \"Editar Evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={(activeEvent) ? activeEvent.start : dateStart}\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        className=\"form-control\"\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={(activeEvent) ? activeEvent.end : dateEnd}\r\n                        minDate={dateStart}\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                        className=\"form-control\"\r\n\r\n                    />\r\n\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\r\n                        placeholder=\"T√≠tulo del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Informaci√≥n adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { DeleteEventFab } from '../ui/DeleteEvenFab';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoadign } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { messages } from '../../helpers/calendar-messages-espa√±ol';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment)\r\n\r\n// const myEventsList = [{\r\n//     title: 'Entrevista',\r\n//     body: 'comentarios',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'jesus',\r\n//     }\r\n// }]\r\nexport const CalendarScreen = () => {\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n\r\n    // const {modalOpen} = useSelector(state => state.ui)\r\n    const dispatch = useDispatch();\r\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoadign());\r\n    }, [dispatch])\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n    const onDoubleClick = (e) => {\r\n\r\n        dispatch(uiOpenModal());\r\n\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        console.log(uid)\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                style={{ height: 500 }}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {(activeEvent) && <DeleteEventFab />}\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { starthecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(starthecking());\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\nReactDOM.render(\n \n    <CalendarApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}