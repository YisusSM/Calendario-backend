{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","components/ui/DeleteEvenFab.js","actions/ui.js","components/ui/AddNewFab.js","components/calendar/CalendarEvent.js","helpers/calendar-messages-espa√±ol.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","console","log","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","startLogout","dispatch","clear","logout","chekingFinish","login","user","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword","rPasswordConfirmed","rName","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","DeleteEventFab","getState","uiOpenModal","AddNewFab","role","CalendarEvent","title","notes","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","length","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","height","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75787c59.chunk.js","sourcesContent":["//objeto para centralizar todos los tipos de acciones\n \nexport const types = {\n\n    uiOpenModal: '[ui] Open Modal',\n    uiCloseModal: '[ui] Close Modal',\n\n    eventAddNew: '[event] Add New',\n    eventLogout: '[event] Clean Events',\n    eventStartAddNew: '[event] Start Add New ',\n    eventSetActive: '[event] Set Active',\n    eventClearActiveEvent: '[event] Clear Active Event',\n    eventUpdate: '[event] Event Updated',\n    eventDelete: '[event] Event Deleted',\n    eventLoaded: '[event] Event Loaded',\n\n\n    authChecking: '[auth] Checking Login State',\n    authCheckingFinish: '[auth] Finish Checking Login State',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Loign',\n    authStartRegister: '[auth] Start Register',\n    authStartJWTRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout', \n\n\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true,\n    // uid:null,\n    // name:null\n}\n\n\nexport const authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            \n            return {\n                \n                checking:false\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n\n// {\n//     id: 'id que se obtiene de la bd',\n//     title: 'Entrevista',\n//     notes: 'arreglarse',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hour').toDate(),\n//     bgcolor: '#fafafa',\n//     user: {\n//         _id: 'se agarra del state',\n//         name: 'se agarra del state',\n//     }\n\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            };\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            };\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id)? action.payload : e\n                )\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events:[...action.payload]\n            }\n\n        case types.eventDelete:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n        default:\n            return state;\n    }\n\n\n};","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n\n});","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\n\nconst composeEnhancers = \n(process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n    console.log(token, 'token');\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n\n        });\n    }\n}\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from \"moment\"\n\nexport const prepareEvents=(events = [])=>{\n    return events.map(\n        (e) =>({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate()\n            \n        })\n    );\n}\n\n","import { types } from \"../types/types\";\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch,getState) => {\n        const { uid,name } = getState().auth;\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n            console.log(body);\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log(event);\n                dispatch(eventAddNew(event));\n\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n\n        // dispatch(eventAddNew(event));\n    }\n}\n\n const eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\nexport const eventUpdated = (event) =>{\n    return  async(dispatch) => {\n        try {\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventUpdate(event));\n            }else {\n                console.log(body);\n                Swal.fire('Error',body.msg,'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n const eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event\n});\n\nexport const eventDeleted = () => {\n    return async (dispatch,getState) => {\n        const {id} = getState().calendar.activeEvent;\n        try {\n           \n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\n            const body = await resp.json();\n            if (body.ok) {\n                dispatch(eventDelete());\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n const eventDelete = () => ({\n    type: types.eventDelete\n})\n\nexport const eventClean = () =>({\n    type: types.eventLogout\n})\n\nexport const eventStartLoadign = () => {\n    return async (dispatch) =>{\n        try {\n            const resp = await fetchConToken('events');\n            const {eventos} = await resp.json();\n            \n            const events = prepareEvents(eventos);\n            \n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n} \n\nconst eventLoaded = (event) => ({\n    type:types.eventLoaded,\n    payload: event\n});","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from '../types/types'\nimport { eventClean } from \"./events\";\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth/register', { email, password, name }, 'POST');\n        const body = await resp.json();\n        console.log(body);\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const starthecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n        console.log(body);\n\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n\n            dispatch(chekingFinish());\n\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventClean());\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({\n    type:types.authLogout\n})\nconst chekingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport './login.css';\n\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'jesussm_0005@hotmail.com',\n        lPassword: 'notiene'\n    });\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rEmail: 'karl@hotmail.com',\n        rPassword: 'notiene',\n        rPasswordConfirmed: 'notiene',\n        rName: 'Karl'\n    });\n\n    const { rEmail, rPassword, rPasswordConfirmed, rName } = formRegisterValues;\n    const { lEmail, lPassword } = formLoginValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        console.log(\"?\");\n        if (rPassword !== rPasswordConfirmed) {\n            return Swal.fire('Error', 'Las contrase√±as deben ser iguales', 'error');\n        }\n        dispatch(startRegister(rEmail, rPassword, rName));\n    }\n    \n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                onChange={handleLoginInputChange}\n                                value={lEmail}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contrase√±a\"\n                                name=\"lPassword\"\n                                onChange={handleLoginInputChange}\n                                value={lPassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contrase√±a\"\n                                name=\"rPassword\"\n                                value={rPassword}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contrase√±a\"\n                                value={rPasswordConfirmed}\n                                name=\"rPasswordConfirmed\"\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const NavBar = () => {\n    const { name } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\" navbar-brand \">{name}</span>\n\n            <button className=\" btn btn-outline-danger \"\n                onClick={handleLogout}>\n                <i className=\" fas fa-sign-out-alt \" />\n                <span > Salir</span>\n            </button>\n        </div>\n\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n    return (\n        <button\n        className = \"btn btn-danger fab-danger\"\n        onClick = {()=>dispatch(eventDeleted())}>\n            <i className = \"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n            \n        </button>\n    )\n}\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n\n})\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n\n})","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n  \n    return (\n        <div>\n            <button\n                className=\"btn btn-primary fab\"\n                onClick = { () => dispatch(uiOpenModal()) }\n                value = \"ss\">\n                <i\n                    className=\"fas fa-plus \"\n                    role = \"button\"></i>\n            </button>\n\n            \n        </div>\n    )\n}\n","import React from 'react';\n\nexport const CalendarEvent = ({event}) => {\n    \n    const { title,notes,user } = event;\n    \n    return (\n        <div>\n            <span>{title}</span>\n            <p>{notes}</p>\n            <strong>- {user.name}</strong>\n            \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el d√≠a',\n    previous: '‚¨Ö',\n    next: '‚û°',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'D√≠a',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver m√°s (${total})`\n};","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventUpdated} from '../../actions/events';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\n\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\n\n\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\n\n\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\nexport const CalendarModal = () => {\n\n\n    const { modalOpen } = useSelector(state => state.ui)\n    const { activeEvent } = useSelector(state => state.calendar)\n    const dispatch = useDispatch();\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true)\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n\n        if (activeEvent) {\n\n            setFormValues(activeEvent);\n\n        } else {\n            setFormValues(initEvent);\n        }\n\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n    // console.log(dateEnd)\n\n    const handleStartDateChange = (e) => {\n        if (activeEvent) {\n            activeEvent.start = e\n            setFormValues({\n                ...formValues,\n                start: activeEvent.start\n            })\n        } else {\n            setDateStart(e);\n            setFormValues({\n                ...formValues,\n                start: e\n            })\n        }\n    }\n    const handleEndDateChange = (e) => {\n        if (activeEvent) {\n            activeEvent.end = e\n            setFormValues({\n                ...formValues,\n                start: activeEvent.end\n            })\n        }\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n    const closeModal = () => {\n        //TODO cerrar modal\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        var momentStart = moment(start);\n        var momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            return Swal.fire('Error', 'Fecha de finalizaci√≥n no puede ser menor o igual a la de inicio...', 'error');\n\n        }\n\n        if (title.length < 2) {\n            return setTitleValid(false)\n        }\n\n        //TODO realizar grabaci√≥n a bd\n        if (activeEvent) {\n            dispatch(eventUpdated(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n    // console.log(titleValid, title);\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1> {(activeEvent) ? \"Editar Evento\" : \"Nuevo evento\"} </h1>\n            <hr />\n            <form className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={(activeEvent) ? activeEvent.start : dateStart}\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                        className=\"form-control\"\n\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={(activeEvent) ? activeEvent.end : dateEnd}\n                        minDate={dateStart}\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                        className=\"form-control\"\n\n                    />\n\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\n                        placeholder=\"T√≠tulo del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripci√≥n corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Informaci√≥n adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { NavBar } from '../ui/NavBar';\nimport { DeleteEventFab } from '../ui/DeleteEvenFab';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoadign } from '../../actions/events';\nimport { uiOpenModal } from '../../actions/ui';\nimport { CalendarEvent } from './CalendarEvent';\nimport { messages } from '../../helpers/calendar-messages-espa√±ol';\nimport { CalendarModal } from './CalendarModal';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment)\n\n// const myEventsList = [{\n//     title: 'Entrevista',\n//     body: 'comentarios',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hour').toDate(),\n//     bgcolor: '#fafafa',\n//     user: {\n//         _id: '123',\n//         name: 'jesus',\n//     }\n// }]\nexport const CalendarScreen = () => {\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n\n    // const {modalOpen} = useSelector(state => state.ui)\n    const dispatch = useDispatch();\n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month')\n\n    useEffect(() => {\n        dispatch(eventStartLoadign());\n    }, [dispatch])\n\n    const onViewChange = (e) => {\n        setlastView(e);\n        localStorage.setItem('lastView', e);\n    }\n    const onDoubleClick = (e) => {\n\n        dispatch(uiOpenModal());\n\n    }\n\n    const onSelectEvent = (e) => {\n\n        dispatch(eventSetActive(e));\n\n    }\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        console.log(uid)\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <NavBar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                style={{ height: 500 }}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {(activeEvent) && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n} from \"react-router-dom\";\nimport { starthecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth)\n    useEffect(() => {\n        dispatch(starthecking());\n    }, [dispatch])\n\n    if (checking) {\n        return <h5>Espere...</h5>\n    }\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\nReactDOM.render(\n \n    <CalendarApp />,\n \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}